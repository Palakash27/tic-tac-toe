{"version":3,"sources":["components/Button.js","components/Buttons.js","components/Header.js","components/CurrentPlayer.js","components/GameStatus.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","useState","Player","setPlayer","style","width","height","color","fontSize","onClick","e","disabled","player","fillBoxArrayWithIndex","target","id","Buttons","textAlign","changePlayer","Header","CurrentPlayer","padding","GameStatus","console","log","gameStatus","GAME_STATUS","WIN","PlayerWon","DRAW","STARTED","App","WhoWon","setWhoWon","StatusGame","setStatusGame","CurrPlayer","setCurrPlayer","BoxFilledCount","setBoxFilledCount","Array","BoxArray","setBoxArray","anyoneWon","newBoxArray","index","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cd72c2f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Button(props) {\r\n  const [Player, setPlayer] = useState(\"-\");\r\n\r\n  const playerClick = e => {\r\n    if (!props.disabled) {\r\n      setPlayer(props.player);\r\n      props.fillBoxArrayWithIndex(e.target.id, props.player);\r\n      e.target.disabled = true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ width: 80, height: 80, color: \" black\", fontSize: \"40px\" }}\r\n      onClick={playerClick}\r\n      id={props.id}\r\n    >\r\n      {Player}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function Buttons(props) {\r\n  return (\r\n    <div style={{ textAlign: \"center \" }}>\r\n      <div>\r\n        <Button\r\n          id={1}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n\r\n        <Button\r\n          id={2}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n        <Button\r\n          id={3}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button\r\n          id={4}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n        <Button\r\n          id={5}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n        <Button\r\n          id={6}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button\r\n          id={7}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n        <Button\r\n          id={8}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n\r\n        <Button\r\n          id={9}\r\n          player={props.player}\r\n          changePlayer={props.changePlayer}\r\n          fillBoxArrayWithIndex={props.fillBoxArrayWithIndex}\r\n          disabled={props.disabled}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <h1> Tic Tac Toe</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CurrentPlayer(props) {\r\n  return (\r\n    <div style={{ textAlign: \"center\", fontSize: \"30px\", padding: 25 }}>\r\n      Current Player is : {props.player}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GAME_STATUS } from \"../App\";\r\n\r\nexport default function GameStatus(props) {\r\n  console.log(props.gameStatus);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", fontSize: \"30px\", padding: 25 }}>\r\n      {props.gameStatus === GAME_STATUS.WIN && (\r\n        <div>{props.PlayerWon} won the match!</div>\r\n      )}\r\n      {props.gameStatus === GAME_STATUS.DRAW && <div>Opps, It's a draw!</div>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./components/Buttons\";\nimport Header from \"./components/Header\";\nimport CurrentPlayer from \"./components/CurrentPlayer\";\nimport GameStatus from \"./components/GameStatus\";\n\nexport const GAME_STATUS = {\n  STARTED: \"0\",\n  WIN: \"1\",\n  DRAW: \"2\"\n};\n\nfunction App() {\n  const [WhoWon, setWhoWon] = useState(\"\");\n  const [StatusGame, setStatusGame] = useState(GAME_STATUS.STARTED);\n  const [CurrPlayer, setCurrPlayer] = useState(\"O\");\n  const [BoxFilledCount, setBoxFilledCount] = useState(1);\n  const [BoxArray, setBoxArray] = useState(new Array(9));\n\n  const fillBoxArrayWithIndex = (index, player) => {\n    let newBoxArray = [...BoxArray];\n    newBoxArray[index - 1] = player;\n    setBoxArray(newBoxArray);\n    console.log(newBoxArray);\n    if (anyoneWon(newBoxArray)) {\n      console.log(StatusGame);\n      setStatusGame(GAME_STATUS.WIN);\n    } else {\n      changePlayer(player);\n    }\n  };\n\n  const changePlayer = player => {\n    setBoxFilledCount(BoxFilledCount + 1);\n    if (player === \"X\") {\n      setCurrPlayer(\"O\");\n    } else {\n      setCurrPlayer(\"X\");\n    }\n    if (BoxFilledCount === 9) {\n      setStatusGame(GAME_STATUS.DRAW);\n    }\n  };\n\n  const anyoneWon = newBoxArray => {\n    console.log(\"I'm checking if anyone won\");\n\n    if (\n      newBoxArray[0] &&\n      newBoxArray[0] === newBoxArray[1] &&\n      newBoxArray[1] === newBoxArray[2]\n    ) {\n      setWhoWon(newBoxArray[0]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[3] &&\n      newBoxArray[3] === newBoxArray[4] &&\n      newBoxArray[4] === newBoxArray[5]\n    ) {\n      setWhoWon(newBoxArray[3]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[6] &&\n      newBoxArray[6] === newBoxArray[7] &&\n      newBoxArray[7] === newBoxArray[8]\n    ) {\n      setWhoWon(newBoxArray[6]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[0] &&\n      newBoxArray[0] === newBoxArray[3] &&\n      newBoxArray[3] === newBoxArray[6]\n    ) {\n      setWhoWon(newBoxArray[0]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[1] &&\n      newBoxArray[1] === newBoxArray[4] &&\n      newBoxArray[4] === newBoxArray[7]\n    ) {\n      setWhoWon(newBoxArray[1]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[2] &&\n      newBoxArray[2] === newBoxArray[5] &&\n      newBoxArray[5] === newBoxArray[8]\n    ) {\n      setWhoWon(newBoxArray[2]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[0] &&\n      newBoxArray[0] === newBoxArray[4] &&\n      newBoxArray[4] === newBoxArray[8]\n    ) {\n      setWhoWon(newBoxArray[0]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    if (\n      newBoxArray[2] &&\n      newBoxArray[2] === newBoxArray[4] &&\n      newBoxArray[4] === newBoxArray[6]\n    ) {\n      setWhoWon(newBoxArray[2]);\n      setStatusGame(GAME_STATUS.WIN);\n      console.log(\"Bro it worked!\");\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div>\n      <Header />\n      {/* style={{ pointerEvents: \"none\", opacity: 0.7 }} */}\n      <div>\n        {(StatusGame === GAME_STATUS.WIN ||\n          StatusGame === GAME_STATUS.DRAW) && (\n          <GameStatus PlayerWon={WhoWon} gameStatus={StatusGame} />\n        )}\n        {StatusGame === GAME_STATUS.STARTED && (\n          <CurrentPlayer player={CurrPlayer} changePlayer={changePlayer} />\n        )}\n        <Buttons\n          player={CurrPlayer}\n          changePlayer={changePlayer}\n          fillBoxArrayWithIndex={fillBoxArrayWithIndex}\n          disabled={\n            StatusGame === GAME_STATUS.WIN || StatusGame === GAME_STATUS.DRAW\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}